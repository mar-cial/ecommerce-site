{"version":3,"sources":["Components/CartaDeProducto.tsx","Components/Header.tsx","Components/ItemDelCarro.tsx","Components/Carro.tsx","Components/Generales.tsx","App.tsx","index.tsx"],"names":["CartaDeProductoStyle","styled","article","CartaDeProducto","item","producto","agregarAlCarro","src","image","alt","title","description","price","Button","onClick","HeaderStyle","header","Header","href","ItemDelCarroStyle","DetailsSection","section","ButtonSection","ItemDelCarro","eliminarDelCarro","amount","toFixed","size","disableElevation","variant","id","CarroStyle","aside","Carro","items","itemsCarro","length","map","reduce","acc","Boton","IconButton","conseguirProductos","a","fetch","json","AppStyle","main","App","useState","carroAbierto","setCarroAbierto","listaCarro","setListaCarro","useQuery","data","isLoading","isError","handleAgregarAlCarro","productoSeleccionado","ant","find","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","color","AddShoppingCart","client","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.8581d140.chunk.js","sourcesContent":["import { Button } from '@material-ui/core';\nimport styled from 'styled-components';\n\nimport { ItemProps } from '../Model/types';\n\nconst CartaDeProductoStyle = styled.article`\n    display: grid;\n    border: 1px solid lightblue;\n    border-radius: 8px;\n    grid-template-rows: 1fr 1fr 30px;\n\n    img {\n        max-height: 200px;\n        object-fit: cover;\n        border-radius: 8px 8px 0 0;\n        max-width: 90%;\n        place-self: center;\n    }\n\n    div {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        padding: 0 1rem;\n\n        header {\n            h3 {\n            }\n        }\n\n        p {\n            font-size: 1rem;\n        }\n\n        h4 {\n            align-self: center;\n        }\n    }\n\n    button {\n        border-radius: 0 0 8px 8px;\n    }\n`;\n\nconst CartaDeProducto: React.FC<ItemProps> = ({\n    producto: item,\n    agregarAlCarro,\n}) => (\n    <CartaDeProductoStyle>\n        <img src={item.image} alt={item.title} />\n        <div>\n            <h3>{item.title}</h3>\n            <p>{item.description}</p>\n            <h4>${item.price}</h4>\n        </div>\n        <Button onClick={() => agregarAlCarro(item)}>Agregar</Button>\n    </CartaDeProductoStyle>\n);\n\nexport default CartaDeProducto;\n","import styled from 'styled-components';\n\nconst HeaderStyle = styled.header`\n    padding: 1rem;\n    border: 1px solid rgb(93, 173, 226);\n    border-radius: 8px;\n`;\n\nconst Header: React.FC = () => {\n    return (\n        <HeaderStyle>\n            <h1>Bienvenido a Tienda Online X.</h1>\n            <sub>Por Cesar Marcial.</sub>\n            <p>Esta aplicación web fue realizada con:</p>\n            <ul>\n                <li>\n                    Productos falsos proporcionados por\n                    https://fakestoreapi.com/products\n                </li>\n                <li>React con Typescript</li>\n                <li>styled-components</li>\n                <li>\n                    @material-ui para ciertos componentes, como botones y\n                    navegación.\n                </li>\n            </ul>\n            <footer>\n                <span>\n                    Puedes encontrar el código en\n                    <br />\n                    <a href=\"#\">github.com/mar-cial/typescript-fake-store</a>\n                </span>\n            </footer>\n        </HeaderStyle>\n    );\n};\n\nexport default Header;\n","import { Button } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { CartItemProps } from '../Model/types';\n\nconst ItemDelCarroStyle = styled.article`\n    display: grid;\n    text-align: center;\n    padding: 1rem;\n    border: 2px solid black;\n\n    img {\n        width: 100px;\n        height: auto;\n        align-self: center;\n        justify-self: center;\n    }\n`;\n\nconst DetailsSection = styled.section``;\n\nconst ButtonSection = styled.section`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n`;\n\nconst ItemDelCarro: React.FC<CartItemProps> = ({\n    item,\n    agregarAlCarro,\n    eliminarDelCarro,\n}) => {\n    return (\n        <ItemDelCarroStyle>\n            <DetailsSection>\n                <h3>{item.title}</h3>\n                <h3>Details</h3>\n                <p>Price: ${item.price}</p>\n                <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\n            </DetailsSection>\n            <ButtonSection>\n                <Button\n                    size=\"small\"\n                    disableElevation\n                    variant=\"contained\"\n                    onClick={() => eliminarDelCarro(item.id)}\n                >\n                    -\n                </Button>\n                <p>{item.amount}</p>\n                <Button\n                    size=\"small\"\n                    disableElevation\n                    variant=\"contained\"\n                    onClick={() => agregarAlCarro(item)}\n                >\n                    +\n                </Button>\n            </ButtonSection>\n            <img src={item.image} alt={item.title} />\n        </ItemDelCarroStyle>\n    );\n};\n\nexport default ItemDelCarro;\n","import styled from 'styled-components';\n\nimport { CartProps, ModeloDeProducto } from '../Model/types';\nimport ItemDelCarro from './ItemDelCarro';\n\nconst CarroStyle = styled.aside`\n  font-family: --apple-system, BlinkMacSystemFont, 'Helvetica', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  padding: 1rem;\n  width: 50vw;\n  display: grid;\n  gap: 2rem;\n`;\n\nconst Carro: React.FC<CartProps> = ({\n  itemsCarro,\n  agregarAlCarro,\n  eliminarDelCarro,\n}) => {\n  const calcularTotal = (items: ModeloDeProducto[]) =>\n    items.reduce((acc: number, item) => acc + item.amount * item.price, 0);\n\n  return (\n    <CarroStyle>\n      <h2>Tu carrito de compras</h2>\n      {itemsCarro.length === 0 ? 'No has agregado nada todavia.' : null}\n      {itemsCarro.map((item) => (\n        <ItemDelCarro\n          key={item.id}\n          item={item}\n          agregarAlCarro={agregarAlCarro}\n          eliminarDelCarro={eliminarDelCarro}\n        />\n      ))}\n      <h2>Total: ${calcularTotal(itemsCarro).toFixed(2)}</h2>\n    </CarroStyle>\n  );\n};\n\nexport default Carro;\n","import { IconButton } from '@material-ui/core';\nimport styled from 'styled-components';\n\nexport const Boton = styled(IconButton)`\n    position: fixed;\n    z-index: 100;\n    right: 20px;\n    bottom: 20px;\n`;\n","import { Badge, Drawer, LinearProgress } from '@material-ui/core';\nimport { useQuery } from 'react-query';\nimport styled from 'styled-components';\nimport { useState } from 'react';\n\n// types\nimport { ModeloDeProducto } from './Model/types';\n\n// components\nimport CartaDeProducto from './Components/CartaDeProducto';\nimport Header from './Components/Header';\nimport Carro from './Components/Carro';\n\nimport { Boton } from './Components/Generales';\nimport { AddShoppingCart } from '@material-ui/icons';\n\n// Fetching Data\nconst conseguirProductos = async (): Promise<ModeloDeProducto[]> => {\n  return await (await fetch('https://fakestoreapi.com/products')).json();\n};\n\n// Style\nconst AppStyle = styled.main`\n  display: grid;\n  gap: 1rem;\n  grid-template-columns: repeat(auto-fill, minmax(min(300px, 100%), 1fr));\n  grid-template-rows: repeat(auto-fill, minmax(min(300px, 100%), 1fr));\n  font-family: --apple-system, BlinkMacSystemFont, 'Helvetica', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n`;\n\n// App start\nconst App = () => {\n  const [carroAbierto, setCarroAbierto] = useState(false);\n  const [listaCarro, setListaCarro] = useState([] as ModeloDeProducto[]);\n\n  const { data, isLoading, isError } = useQuery<ModeloDeProducto[]>(\n    'productos',\n    conseguirProductos\n  );\n\n  const conseguirItemsTotales = (items: ModeloDeProducto[]) =>\n    items.reduce((acc: number, item) => acc + item.amount, 0);\n\n  const handleAgregarAlCarro = (productoSeleccionado: ModeloDeProducto) => {\n    setListaCarro((ant) => {\n      // 1. Is the item already added in the cart?\n      const isItemInCart = ant.find(\n        (item) => item.id === productoSeleccionado.id\n      );\n\n      if (isItemInCart) {\n        return ant.map((item) =>\n          item.id === productoSeleccionado.id\n            ? { ...item, amount: item.amount + 1 }\n            : item\n        );\n      }\n      // First time the item is added\n      return [...ant, { ...productoSeleccionado, amount: 1 }];\n    });\n  };\n\n  const handleEliminarDelCarro = (id: number) => {\n    setListaCarro((ant) =>\n      ant.reduce((acc, item) => {\n        if (item.id === id) {\n          if (item.amount === 1) return acc;\n          return [...acc, { ...item, amount: item.amount - 1 }];\n        } else {\n          return [...acc, item];\n        }\n      }, [] as ModeloDeProducto[])\n    );\n  };\n\n  if (isLoading) return <LinearProgress />;\n  if (isError) return <h2>Something went wrong.</h2>;\n\n  return (\n    <AppStyle>\n      <Drawer\n        anchor=\"right\"\n        open={carroAbierto}\n        onClose={() => setCarroAbierto(false)}\n      >\n        <Carro\n          itemsCarro={listaCarro}\n          agregarAlCarro={handleAgregarAlCarro}\n          eliminarDelCarro={handleEliminarDelCarro}\n        />\n      </Drawer>\n      <Boton onClick={() => setCarroAbierto(true)}>\n        <Badge badgeContent={conseguirItemsTotales(listaCarro)} color=\"error\">\n          <AddShoppingCart />\n        </Badge>\n      </Boton>\n      <Header />\n      {data?.map((item) => (\n        <CartaDeProducto\n          key={item.id}\n          producto={item}\n          agregarAlCarro={handleAgregarAlCarro}\n        />\n      ))}\n    </AppStyle>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={client}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}